const crypto = require("crypto");
class UnionInstructionBuilder {
  static ["generateSalt"]() {
    return '0x' + crypto.randomBytes(32).toString("hex");
  }
  static ["calculateTimeout"]() {
    const _0x33d2ed = Date.now();
    const _0xcb332e = _0x33d2ed + 86400000;
    return (_0xcb332e * 1000000).toString();
  }
  static ["getTokenConfig"](_0x29291b) {
    const _0x25a545 = {
      'USDC': {
        'denom': "ibc/6490A7EAB61059BFC1CDDEB05917DD70BDF3A611654162A1A47DB930D40D8AF4",
        'baseToken': "ibc/6490A7EAB61059BFC1CDDEB05917DD70BDF3A611654162A1A47DB930D40D8AF4",
        'baseTokenName': "ibc/6490A7EAB61059BFC1CDDEB05917DD70BDF3A611654162A1A47DB930D40D8AF4",
        'baseTokenSymbol': "ibc/6490A7EAB61059BFC1CDDEB05917DD70BDF3A611654162A1A47DB930D40D8AF4",
        'baseTokenDecimals': 0x6,
        'quoteToken': "bbn1lfpplnfqlrdrzd5p54ya28p99v98m9at5rskcsr4he6gcmt0gf4qq3lu39",
        'microUnit': 0xf4240,
        'instructionPattern': "usdc"
      },
      'XION': {
        'denom': "uxion",
        'baseToken': "uxion",
        'baseTokenName': "xion",
        'baseTokenSymbol': "XION",
        'baseTokenDecimals': 0x0,
        'quoteToken': "bbn1zjjqhxrvx3cqsxt46tf8cjzskjfypve2fu6k3pnt7f7lferf99sqpxpasy",
        'microUnit': 0xf4240,
        'instructionPattern': "xion"
      }
    };
    return _0x25a545[_0x29291b.toUpperCase()];
  }
  static ["getUSDCInstructionPattern"]() {
    return "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000004c000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001ab78696f6e313674646d33796c6c7677303377766870347437766d38366b796d6a75716661716e7071796567000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a62626e313674646d33796c6c7677303377766870347437766d38366b796d6a7571666171786b746873360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000446962632f363439304137454142363130353942464331434444454230353931374444373042444633413631313635343136324131413437444239333044343044384146340000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000446962632f363439304137454142363130353942464331434444454230353931374444373042444633413631313635343136324131413437444239333044343044384146340000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000446962632f3634393041374541423631303539424643314344444542303539313744443730424446334136313136353431363241314134374442393330443430443841463400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e62626e316c6670706c6e66716c7264727a6435703534796132387039397639386d3961743572736b6373723468653667636d74306766347171336c7533390000";
  }
  static ["getXIONInstructionPattern"]() {
    returna000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c00000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000002b78696f6e313674646d33796c6c7677303377766870347437766d38366b796d6a75716661716e7071796567000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002a62626e313674646d33796c6c7677303377766870347437766d38366b796d6a7571666171786b746873360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000057578696f6e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000458494f4e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000478696f6e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e62626e317a6a6a7168787276783363717378743436746638636a7a736b6a6679707665326675366b33706e743766376c66657266393973717078706173790000";
  }
  static ["createDynamicInstructionWithToken"](_0x329399, _0x470564, _0x5c19ac, _0x4a738c) {
    const _0x32cc54 = this.getTokenConfig(_0x4a738c);
    if (!_0x32cc54) {
      throw new Error("Unsupported token type: " + _0x4a738c);
    }
    const _0x2d7ef9 = parseInt(_0x329399).toString(16);
    let _0x1868a5;
    if (_0x32cc54.instructionPattern === "usdc") {
      _0x1868a5 = this.getUSDCInstructionPattern();
    } else {
      if (_0x32cc54.instructionPattern === "xion") {
        _0x1868a5 = this.getXIONInstructionPattern();
      } else {
        throw new Error("Unknown instruction pattern: " + _0x32cc54.instructionPattern);
      }
    }
    _0x1868a5 = _0x1868a5.replace(/2710/g, _0x2d7ef9.padStart(4, '0'));
    if (_0x470564 && _0x5c19ac) {
      const _0x22a9ff = Buffer.from(_0x470564, "utf8").toString("hex");
      const _0x3b6234 = Buffer.from(_0x5c19ac, "utf8").toString("hex");
      _0x1868a5 = _0x1868a5.replace(new RegExp("78696f6e313674646d33796c6c7677303377766870347437766d38366b796d6a75716661716e7071796567", 'g'), _0x22a9ff);
      _0x1868a5 = _0x1868a5.replace(new RegExp("62626e313674646d33796c6c7677303377766870347437766d38366b796d6a7571666171786b74687336", 'g'), _0x3b6234);
      console.log("🔄 Replaced sender: " + _0x470564 + " -> " + _0x22a9ff.substring(0, 20) + "...");
      console.log("🔄 Replaced receiver: " + _0x5c19ac + " -> " + _0x3b6234.substring(0, 20) + "...");
    }
    console.log("💰 Amount: " + _0x329399 + " micro" + _0x32cc54.baseTokenSymbol + " (0x" + _0x2d7ef9 + ')');
    console.log("🪙 Token: " + _0x32cc54.baseTokenSymbol + " (" + _0x32cc54.baseTokenName + ')');
    return _0x1868a5;
  }
  static ["createSendMessage"](_0x43b6f4) {
    const {
      channelId = 2,
      senderAddress: _0x39e5e2,
      receiverAddress: _0x399685,
      amount: _0x4babbc,
      tokenType = "USDC"
    } = _0x43b6f4;
    const _0x45ef5b = this.getTokenConfig(tokenType);
    if (!_0x45ef5b) {
      throw new Error("Unsupported token type: " + tokenType);
    }
    const _0xf6e216 = this.generateSalt();
    const _0x4e12d3 = this.calculateTimeout();
    const _0x478522 = this.createDynamicInstructionWithToken(_0x4babbc, _0x39e5e2, _0x399685, tokenType);
    console.log("🧂 Generated salt: " + _0xf6e216);
    console.log("⏰ Timeout: " + _0x4e12d3);
    console.log("🔧 Instruction (first 100 chars): " + _0x478522.substring(0, 100) + "...");
    return {
      'send': {
        'channel_id': channelId,
        'timeout_height': '0',
        'timeout_timestamp': _0x4e12d3,
        'salt': _0xf6e216,
        'instruction': '0x' + _0x478522
      }
    };
  }
}
module.exports = {
  'UnionInstructionBuilder': UnionInstructionBuilder
};
